{"version":3,"sources":["components/main/assets/infoicon.png","components/Input/index.js","components/modules/index.js","components/CorrectModal/modules.js","components/CorrectModal/index.js","components/main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","this","props","answer","handleChangeInput","disabled","className","type","value","onChange","e","pattern","Component","randomNumberGenerator","mode","console","log","Math","floor","random","giphySelector","linksArray","length","CorrectModal","display","onClick","reset","src","alt","Main","useState","setMode","mathFunction","setMathFunction","num1","setNum1","num2","setNum2","setAnswer","correct","setCorrect","correctCount","setCorrectCount","handleSetMode","newMode","handleSetMathFunction","newFunction","style","flexDirection","margin","evt","charToCheck","slice","test","isNumber","target","preventDefault","correctAnswer","a","b","adding","c","Number","subtracting","handleSubtract","multiplying","handleMultiply","dividing","handleDivide","json","version","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f1755d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/infoicon.d6142527.png\";","import React, { Component } from 'react';\nimport './input.css';\nimport PropTypes from 'prop-types';\n\nclass Input extends Component {\n  render() {\n    const { answer, handleChangeInput, disabled } = this.props;\n    return (\n      <div className=\"input\">\n        <input \n        disabled={disabled}\n        type=\"text\"\n        value={answer} \n          onChange={(e) => handleChangeInput(e)}\n          pattern=\"^[0-9]*$\" />\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  color: PropTypes.string,\n  handleColorChange: PropTypes.func,\n  mode: PropTypes.string\n};\n  \n\nexport default Input;","// to do: functions for adding, subtracting, diving and multiplying\n\nexport const adding = (a, b, c = 0) => {\n  return a + b + c;\n}\n\nexport const subtracting = (a, b) => {\n  return a - b;\n}\n\nexport const multiplying = (a, b) => {\n  return a * b;\n}\n\nexport const dividing = (a, b) => {\n  return a / b;\n}\n\nexport const randomNumberGenerator = (mode) => {\n  console.log(mode)\n  if (mode === 'easy') {\n    return Math.floor(Math.random() * 10)\n  }\n  if (mode === 'medium') {\n    return Math.floor(Math.random() * 100)\n  }\n  if (mode === 'hard') {\n    return Math.floor(Math.random() * 1000)\n  }\n  if (mode === 'expert') {\n    return Math.floor(Math.random() * 10000)\n  }\n}\n\nexport function isNumber(evt) {\n  console.log(evt)\n  const charToCheck = evt.slice(evt.length - 1, evt.length)\n  if (!/[0-9]/.test(charToCheck)) {\n    return false\n  }\n  return true;\n}","export const giphySelector = () => {\n    const linksArray = [\n        'https://media.giphy.com/media/xUPGcMzwkOY01nj6hi/giphy.gif',\n        'https://media.giphy.com/media/3ndAvMC5LFPNMCzq7m/giphy.gif',\n        'https://media.giphy.com/media/7GAs8uxFXdKss7gGvD/giphy.gif',\n        'https://media.giphy.com/media/8UGGp7rQvfhe63HrFq/giphy.gif',\n        'https://media.giphy.com/media/xUPGchCDuw3WnREEKc/giphy.gif',\n        'https://media.giphy.com/media/WJ2qYXo1PTskA7kzrc/giphy.gif',\n        'https://media.giphy.com/media/Y64uBZCJsl0TS/giphy.gif',\n        'https://media.giphy.com/media/cQ75oh2k0p5rSpur1L/giphy.gif',\n        'https://media.giphy.com/media/G9Kj87gLF8Z4A/giphy.gif',\n        'https://media.giphy.com/media/xT9DPDp0PNRFbuqqli/giphy.gif',\n        'https://media.giphy.com/media/lcjv1V5ypsG3djVqg4/giphy.gif',\n        'https://media.giphy.com/media/xjUlxQHkMBqSvLeSTy/giphy.gif',\n        'https://media.giphy.com/media/qMBcLAlkaEZ7cEXK1A/giphy.gif',\n        'https://media.giphy.com/media/xT8qAZ5fePzxYomjDO/giphy.gif',\n        'https://media.giphy.com/media/25Xm6UcjDQcP6/giphy.gif',\n        'https://media.giphy.com/media/3o6Zt8MgUuvSbkZYWc/giphy.gif',\n        'https://media.giphy.com/media/29rsFlMw8wLlxOCPH1/giphy.gif',\n        'https://media.giphy.com/media/KEG5UtvXUD7WPIhhuy/giphy.gif',\n        'https://media.giphy.com/media/wGbzbDyVgubXdQfHVR/giphy.gif',\n        'https://media.giphy.com/media/l0HlVqSbE6FvUgGkw/giphy.gif',\n        'https://media.giphy.com/media/gsRGYCxC5kcTFa8pPF/giphy.gif',\n        'https://media.giphy.com/media/bTqgYtFJJkHzxR3oRj/giphy.gif',\n        'https://media.giphy.com/media/GaxzIvX4TWD9XSVwgZ/giphy.gif',\n        'https://media.giphy.com/media/mS1f8iZy65QIeBXs0V/giphy.gif',\n        'https://media.giphy.com/media/xT9IgxYMWIzMTkiaLC/giphy.gif',\n        'https://media.giphy.com/media/5xJIIRPC23yZG/giphy.gif',\n        'https://media.giphy.com/media/l0MYCKMCJFO8xfJUA/giphy.gif',\n        'https://media.giphy.com/media/l2Sqir5ZxfoS27EvS/giphy.gif',\n        'https://media.giphy.com/media/5xaOcLRwK0101QyNTwc/giphy.gif',\n        'https://media.giphy.com/media/VjkwQWAn85pQEwMX7c/giphy.gif',\n        'https://media.giphy.com/media/V7rIHfz5YKykNzEg0o/giphy.gif',\n        'https://media.giphy.com/media/ev7pAfA2f8WGlXXzPE/giphy.gif',\n        'https://media.giphy.com/media/l0Iy1Q9XnpoVP4B8c/giphy.gif',\n        'https://media.giphy.com/media/5JzBSOGkUGwDLkGRWh/giphy.gif',\n        'https://media.giphy.com/media/hpf75ds3iiBQdQODyM/giphy.gif',\n        'https://media.giphy.com/media/Pf9j6wQgdXmrer4Uxr/giphy.gif',\n        'https://media.giphy.com/media/ddAyk5vRf2I2qDa6Am/giphy.gif',\n        'https://media.giphy.com/media/fvVtQpTgRRpNi6OUTA/giphy.gif',\n        'https://media.giphy.com/media/AFlAxHddRi3Bu/giphy.gif',\n        'https://media.giphy.com/media/A441EggWUa7cc/giphy.gif',\n        'https://media.giphy.com/media/VerIk7pS3iEEg/giphy.gif',\n        'https://media.giphy.com/media/sEZx2dWFBtEdbW0xzM/giphy.gif',\n        'https://media.giphy.com/media/xT1R9TQOAcW7AkbV84/giphy.gif',\n        'https://media.giphy.com/media/tAr8T8GTQGn7xycujB/giphy.gif',\n        'https://media.giphy.com/media/EXFAJtutz5Ig8/giphy.gif',\n        'https://media.giphy.com/media/3oz8xRF0v9WMAUVLNK/giphy.gif',\n        'https://media.giphy.com/media/3ohhwo4PzDFaz2sADu/giphy.gif',\n        'https://media.giphy.com/media/t6Kf66K6yn6xi9Ma5U/giphy.gif',\n        'https://media.giphy.com/media/Oa5op39YNH8QMAaEco/giphy.gif',\n        'https://media.giphy.com/media/S9dEWx09yPN4uU13E4/giphy.gif',\n        'https://media.giphy.com/media/9wG8hpQRkHMoDbCqzu/giphy.gif',\n        'https://media.giphy.com/media/WhoNyvVjuB88HjDK0l/giphy.gif',\n        'https://media.giphy.com/media/JZLaL7vxYBMwOw4Vjd/giphy.gif',\n        'https://media.giphy.com/media/gbmWwWm4sGMQvAYm1G/giphy.gif',\n        'https://media.giphy.com/media/ka7P8QoXrpm5VX8FrW/giphy.gif'\n    ]\n    const chosen = linksArray[Math.floor(Math.random() * linksArray.length)]\n    return chosen;\n}","import React from 'react';\nimport './correctModal.css';\nimport PropTypes from 'prop-types';\nimport { giphySelector } from './modules';\n\nconst CorrectModal = (props) => {\n    console.log(props.display)\n    return (\n      <div className=\"modal-container\" onClick={props.reset}>\n       <img src={giphySelector()} alt=\"yay!\" />\n      </div>\n    );\n}\n\nCorrectModal.propTypes = {\n  color: PropTypes.string,\n  handleColorChange: PropTypes.func,\n  mode: PropTypes.string\n};\n  \n\nexport default CorrectModal;","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './main.css';\n// import Display from '../display/index';\nimport Input from '../Input/index';\nimport InfoIconCircle from './assets/infoicon.png';\nimport {\n  adding, subtracting, multiplying, dividing, randomNumberGenerator, isNumber\n} from '../modules/index.js';\nimport json from '../../../package.json';\nimport CorrectModal from '../CorrectModal';\n\nconst Main = (props) => {\n  const [mode, setMode] = useState('Choose a mode:');\n  const [mathFunction, setMathFunction] = useState('Choose math function type:')\n  const [num1, setNum1] = useState(null)\n  const [num2, setNum2] = useState(null)\n  const [answer, setAnswer] = useState('')\n  const [correct, setCorrect] = useState(null)\n  const [correctCount, setCorrectCount] = useState(0)\n\n  const handleChangeInput = (e) => {\n      const numCheck = isNumber(e.target.value)\n    if (numCheck || e.target.value === '') {\n      e.preventDefault();\n      setAnswer(e.target.value)\n    }\n  }\n\n  const handleSetMode = (newMode) => {\n    setMode(newMode);\n    setAnswer('')\n    if (mathFunction !== 'Choose math function type:') {\n      setNum1(randomNumberGenerator(mode))\n      setNum2(randomNumberGenerator(mode))\n    }\n  }\n\n  const handleSetMathFunction = (newFunction) => {\n    setMathFunction(newFunction)\n    setAnswer('')\n    if (mode !== 'Choose a mode:') {\n      setNum1(randomNumberGenerator(mode))\n      setNum2(randomNumberGenerator(mode))\n    }\n  }\n\n  const handleAdd = (a, b, c) => adding(a, b, c);\n\n  const handleSubtract = (a, b) => subtracting(a, b);\n\n  const handleMultiply = (a, b) => multiplying(a, b);\n\n  const handleDivide = (a, b) => dividing(a, b);\n\n  const handleCompareAnswer = () => {\n    if (mathFunction === 'addition') {\n      const correctAnswer = handleAdd(num1, num2)\n      if (correctAnswer === Number(answer)) {\n        setCorrect(true)\n        setCorrectCount(correctCount + 1)\n      } else {\n        setCorrect(false)\n      }\n    }\n    if (mathFunction === 'subtraction') {\n      const correctAnswer = handleSubtract(num1, num2)\n      if (correctAnswer === Number(answer)) {\n        setCorrect(true)\n        setCorrectCount(correctCount + 1)\n      } else {\n        setCorrect(false)\n      }\n    }\n    if (mathFunction === 'multiplication') {\n      const correctAnswer = handleMultiply(num1, num2)\n      if (correctAnswer === Number(answer)) {\n        setCorrect(true)\n        setCorrectCount(correctCount + 1)\n      } else {\n        setCorrect(false)\n      }\n    }\n    if (mathFunction === 'division') {\n      const correctAnswer = handleDivide(num1, num2)\n      if (correctAnswer === Number(answer)) {\n        setCorrect(true)\n        setCorrectCount(correctCount + 1)\n      } else {\n        setCorrect(false)\n      }\n    }\n    setAnswer('')\n  }\n\n  const handleReset = () => {\n    setAnswer('')\n    setCorrect(null)\n    setNum1(randomNumberGenerator(mode))\n    setNum2(randomNumberGenerator(mode))\n  }\n\n  console.log('random', num1, num2)\n  console.log('correct??', correct)\n\n  return (\n    <div className='main-container'>\n      {/* {correct ? \n            <div className='modal-overlay' />\n            : null} */}\n      {correct ? <CorrectModal reset={handleReset} /> : null}\n      <h1>Math Game</h1>\n      <div>\n        <h2>You've gotten {correctCount} correct so far!</h2>\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'row', margin: '5em' }}>\n        <div className='settings-box'>\n          <div>\n            <h3>{mode}</h3>\n            <div className='buttons-box'>\n              <div className={`settingBtn ${mode === 'easy' ? 'active' : 'inactive'}`} onClick={() => handleSetMode('easy')}>easy</div>\n              <div className={`settingBtn ${mode === 'medium' ? 'active' : 'inactive'}`} onClick={() => handleSetMode('medium')}>medium</div>\n              <div className={`settingBtn ${mode === 'hard' ? 'active' : 'inactive'}`} onClick={() => handleSetMode('hard')}>hard</div>\n              <div className={`settingBtn ${mode === 'expert' ? 'active' : 'inactive'}`} onClick={() => handleSetMode('expert')}>expert</div>\n            </div>\n          </div>\n          <div>\n            <h3>{mathFunction}</h3>\n            <div className='buttons-box'>\n              <div className={`settingBtn ${mathFunction === 'addition' ? 'active' : 'inactive'}`} onClick={() => handleSetMathFunction('addition')}>+</div>\n              <div className={`settingBtn ${mathFunction === 'subtraction' ? 'active' : 'inactive'}`} onClick={() => handleSetMathFunction('subtraction')}>-</div>\n              <div className={`settingBtn ${mathFunction === 'multiplication' ? 'active' : 'inactive'}`} onClick={() => handleSetMathFunction('multiplication')}>x</div>\n              <div className={`settingBtn ${mathFunction === 'division' ? 'active' : 'inactive'}`} onClick={() => handleSetMathFunction('division')}>/</div>\n            </div>\n          </div>\n        </div>\n        <div className='mathing-area'>\n          {num2 !== null ? num1 > num2 ? num1 : num2 : '?'}\n          {mathFunction === 'addition' ? ' + ' : mathFunction === 'subtraction' ? ' - ' : mathFunction === 'multiplication' ? ' x ' : mathFunction === 'division' ? ' / ' : ' ? '}\n          {num2 !== null ? num2 < num1 ? num2 : num1 : '?'} =\n          <Input answer={answer} handleChangeInput={handleChangeInput} disabled={!mode || !mathFunction ? true : false} />\n          <div className={answer && answer.length ? 'submitBtn' : 'disabled'} onClick={handleCompareAnswer}>Submit</div>\n        </div>\n      </div>\n      {json.version}\n    </div>\n  )\n}\n\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/main/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}