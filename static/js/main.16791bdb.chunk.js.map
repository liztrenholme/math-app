{"version":3,"sources":["components/Input/index.js","components/modules/index.js","components/CorrectModal/modules.js","components/CorrectModal/index.js","components/main/index.js","App.js","serviceWorker.js","index.js"],"names":["Input","this","props","answer","handleChangeInput","disabled","className","inputMode","value","onChange","e","pattern","Component","randomNumberGenerator","mode","console","log","Math","floor","random","giphySelector","linksArray","length","CorrectModal","useState","displayImg","setDisplayImg","useEffect","timer","setTimeout","reset","clearTimeout","onClick","src","alt","Main","setMode","mathFunction","setMathFunction","num1","setNum1","num2","setNum2","setAnswer","correct","setCorrect","correctCount","setCorrectCount","hasPlayed","setHasPlayed","inputDisabled","setInputDisabled","handleSetMode","newMode","newNum2","handleSetMathFunction","newFunction","style","backgroundColor","borderRadius","width","toUpperCase","margin","evt","charToCheck","slice","test","isNumber","target","preventDefault","marginLeft","marginRight","correctAnswer","a","b","adding","c","Number","subtracting","handleSubtract","multiplying","handleMultiply","dividing","handleDivide","json","version","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16791bdb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './input.css';\nimport PropTypes from 'prop-types';\n\nclass Input extends Component {\n  render() {\n    const { answer, handleChangeInput, disabled } = this.props;\n    return (\n      <div className=\"input\">\n        <input \n        disabled={disabled}\n        inputMode='numeric'\n        value={answer} \n        onChange={(e) => handleChangeInput(e)}\n        pattern=\"^[0-9]*$\" />\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  color: PropTypes.string,\n  handleColorChange: PropTypes.func,\n  mode: PropTypes.string\n};\n  \n\nexport default Input;","// to do: functions for adding, subtracting, diving and multiplying\n\nexport const adding = (a, b, c = 0) => {\n  return a + b + c;\n}\n\nexport const subtracting = (a, b) => {\n  return a - b;\n}\n\nexport const multiplying = (a, b) => {\n  return a * b;\n}\n\nexport const dividing = (a, b) => {\n  return a / b;\n}\n\nexport const randomNumberGenerator = (mode) => {\n  console.log(mode)\n  if (mode === 'easy') {\n    return Math.floor(Math.random() * 10)\n  }\n  if (mode === 'medium') {\n    return Math.floor(Math.random() * 100)\n  }\n  if (mode === 'hard') {\n    return Math.floor(Math.random() * 1000)\n  }\n  if (mode === 'expert') {\n    return Math.floor(Math.random() * 10000)\n  }\n}\n\nexport function isNumber(evt) {\n  console.log(evt)\n  const charToCheck = evt.slice(evt.length - 1, evt.length)\n  if (!/[0-9]/.test(charToCheck)) {\n    return false\n  }\n  return true;\n}","export const giphySelector = () => {\n    const linksArray = [\n        'https://media.giphy.com/media/xUPGcMzwkOY01nj6hi/giphy.gif',\n        'https://media.giphy.com/media/3ndAvMC5LFPNMCzq7m/giphy.gif',\n        'https://media.giphy.com/media/7GAs8uxFXdKss7gGvD/giphy.gif',\n        'https://media.giphy.com/media/8UGGp7rQvfhe63HrFq/giphy.gif',\n        'https://media.giphy.com/media/xUPGchCDuw3WnREEKc/giphy.gif',\n        'https://media.giphy.com/media/WJ2qYXo1PTskA7kzrc/giphy.gif',\n        'https://media.giphy.com/media/Y64uBZCJsl0TS/giphy.gif',\n        'https://media.giphy.com/media/cQ75oh2k0p5rSpur1L/giphy.gif',\n        'https://media.giphy.com/media/G9Kj87gLF8Z4A/giphy.gif',\n        'https://media.giphy.com/media/xT9DPDp0PNRFbuqqli/giphy.gif',\n        'https://media.giphy.com/media/lcjv1V5ypsG3djVqg4/giphy.gif',\n        'https://media.giphy.com/media/xjUlxQHkMBqSvLeSTy/giphy.gif',\n        'https://media.giphy.com/media/qMBcLAlkaEZ7cEXK1A/giphy.gif',\n        'https://media.giphy.com/media/xT8qAZ5fePzxYomjDO/giphy.gif',\n        'https://media.giphy.com/media/25Xm6UcjDQcP6/giphy.gif',\n        'https://media.giphy.com/media/3o6Zt8MgUuvSbkZYWc/giphy.gif',\n        'https://media.giphy.com/media/29rsFlMw8wLlxOCPH1/giphy.gif',\n        'https://media.giphy.com/media/KEG5UtvXUD7WPIhhuy/giphy.gif',\n        'https://media.giphy.com/media/wGbzbDyVgubXdQfHVR/giphy.gif',\n        'https://media.giphy.com/media/l0HlVqSbE6FvUgGkw/giphy.gif',\n        'https://media.giphy.com/media/gsRGYCxC5kcTFa8pPF/giphy.gif',\n        'https://media.giphy.com/media/bTqgYtFJJkHzxR3oRj/giphy.gif',\n        'https://media.giphy.com/media/GaxzIvX4TWD9XSVwgZ/giphy.gif',\n        'https://media.giphy.com/media/mS1f8iZy65QIeBXs0V/giphy.gif',\n        'https://media.giphy.com/media/xT9IgxYMWIzMTkiaLC/giphy.gif',\n        'https://media.giphy.com/media/5xJIIRPC23yZG/giphy.gif',\n        'https://media.giphy.com/media/l0MYCKMCJFO8xfJUA/giphy.gif',\n        'https://media.giphy.com/media/l2Sqir5ZxfoS27EvS/giphy.gif',\n        'https://media.giphy.com/media/5xaOcLRwK0101QyNTwc/giphy.gif',\n        'https://media.giphy.com/media/VjkwQWAn85pQEwMX7c/giphy.gif',\n        'https://media.giphy.com/media/V7rIHfz5YKykNzEg0o/giphy.gif',\n        'https://media.giphy.com/media/ev7pAfA2f8WGlXXzPE/giphy.gif',\n        'https://media.giphy.com/media/l0Iy1Q9XnpoVP4B8c/giphy.gif',\n        'https://media.giphy.com/media/5JzBSOGkUGwDLkGRWh/giphy.gif',\n        'https://media.giphy.com/media/hpf75ds3iiBQdQODyM/giphy.gif',\n        'https://media.giphy.com/media/Pf9j6wQgdXmrer4Uxr/giphy.gif',\n        'https://media.giphy.com/media/ddAyk5vRf2I2qDa6Am/giphy.gif',\n        'https://media.giphy.com/media/fvVtQpTgRRpNi6OUTA/giphy.gif',\n        'https://media.giphy.com/media/AFlAxHddRi3Bu/giphy.gif',\n        'https://media.giphy.com/media/A441EggWUa7cc/giphy.gif',\n        'https://media.giphy.com/media/VerIk7pS3iEEg/giphy.gif',\n        'https://media.giphy.com/media/sEZx2dWFBtEdbW0xzM/giphy.gif',\n        'https://media.giphy.com/media/xT1R9TQOAcW7AkbV84/giphy.gif',\n        'https://media.giphy.com/media/tAr8T8GTQGn7xycujB/giphy.gif',\n        'https://media.giphy.com/media/EXFAJtutz5Ig8/giphy.gif',\n        'https://media.giphy.com/media/3oz8xRF0v9WMAUVLNK/giphy.gif',\n        'https://media.giphy.com/media/3ohhwo4PzDFaz2sADu/giphy.gif',\n        'https://media.giphy.com/media/t6Kf66K6yn6xi9Ma5U/giphy.gif',\n        'https://media.giphy.com/media/Oa5op39YNH8QMAaEco/giphy.gif',\n        'https://media.giphy.com/media/S9dEWx09yPN4uU13E4/giphy.gif',\n        'https://media.giphy.com/media/9wG8hpQRkHMoDbCqzu/giphy.gif',\n        'https://media.giphy.com/media/WhoNyvVjuB88HjDK0l/giphy.gif',\n        'https://media.giphy.com/media/JZLaL7vxYBMwOw4Vjd/giphy.gif',\n        'https://media.giphy.com/media/gbmWwWm4sGMQvAYm1G/giphy.gif',\n        'https://media.giphy.com/media/ka7P8QoXrpm5VX8FrW/giphy.gif'\n    ]\n    const chosen = linksArray[Math.floor(Math.random() * linksArray.length)]\n    return chosen;\n}","import React, {useEffect, useState} from 'react';\nimport './correctModal.css';\nimport PropTypes from 'prop-types';\nimport { giphySelector } from './modules';\n\nconst CorrectModal = (props) => {\n  const [displayImg, setDisplayImg] = useState(true)\n    useEffect(() => {\n      const timer = setTimeout(() => {\n        setDisplayImg(false)\n        props.reset()\n      }, 5000);\n      return () => clearTimeout(timer);\n    }, [props]);\n    return displayImg ? (\n      <div className=\"modal-container\" onClick={props.reset}>\n       <img src={giphySelector()} alt=\"yay!\" />\n      </div>\n    ) : null\n}\n\nCorrectModal.propTypes = {\n  reset: PropTypes.func \n};\n  \n\nexport default CorrectModal;","/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './main.css';\n// import Display from '../display/index';\nimport Input from '../Input/index';\n// import InfoIconCircle from './assets/infoicon.png';\nimport {\n  adding, subtracting, multiplying, dividing, randomNumberGenerator, isNumber\n} from '../modules/index.js';\nimport json from '../../../package.json';\nimport CorrectModal from '../CorrectModal';\n\nconst Main = (props) => {\n  const [mode, setMode] = useState('Choose a mode:');\n  const [mathFunction, setMathFunction] = useState('Choose math function type:')\n  const [num1, setNum1] = useState(null)\n  const [num2, setNum2] = useState(null)\n  const [answer, setAnswer] = useState('')\n  const [correct, setCorrect] = useState(null)\n  const [correctCount, setCorrectCount] = useState(0)\n  const [hasPlayed, setHasPlayed] = useState(false)\n  const [inputDisabled, setInputDisabled] = useState(false)\n\n  const handleChangeInput = (e) => {\n    const numCheck = isNumber(e.target.value)\n    if (numCheck || e.target.value === '') {\n      e.preventDefault();\n      setAnswer(e.target.value)\n    }\n  }\n\n  const handleSetMode = (newMode) => {\n    setMode(newMode);\n    setAnswer('')\n    if (mathFunction !== 'Choose math function type:') {\n      const num1 = randomNumberGenerator(mode)\n      const num2 = randomNumberGenerator(mode)\n      if (num2 > num1) {\n        const newNum1 = num2;\n        const newNum2 = num1;\n        setNum1(newNum1);\n        setNum2(newNum2);\n      } else {\n        setNum1(num1)\n        setNum2(num2)\n      }\n    }\n  }\n\n  const handleSetMathFunction = (newFunction) => {\n    setMathFunction(newFunction)\n    setAnswer('')\n    if (mode !== 'Choose a mode:') {\n      const num1 = randomNumberGenerator(mode)\n      const num2 = randomNumberGenerator(mode)\n      if (num2 > num1) {\n        const newNum1 = num2;\n        const newNum2 = num1;\n        setNum1(newNum1);\n        setNum2(newNum2);\n      } else {\n        setNum1(num1)\n        setNum2(num2)\n      }\n    }\n  }\n\n  const handleAdd = (a, b, c) => adding(a, b, c);\n\n  const handleSubtract = (a, b) => subtracting(a, b);\n\n  const handleMultiply = (a, b) => multiplying(a, b);\n\n  const handleDivide = (a, b) => dividing(a, b);\n\n  const handleCompareAnswer = () => {\n    setInputDisabled(true)\n    if (mathFunction === 'addition') {\n      const correctAnswer = handleAdd(num1, num2)\n      if (correctAnswer === Number(answer)) {\n        setCorrect(true)\n        setCorrectCount(correctCount + 1)\n      } else {\n        setCorrect(false)\n      }\n    }\n    if (mathFunction === 'subtraction') {\n      const correctAnswer = handleSubtract(num1, num2)\n      if (correctAnswer === Number(answer)) {\n        setCorrect(true)\n        setCorrectCount(correctCount + 1)\n      } else {\n        setCorrect(false)\n      }\n    }\n    if (mathFunction === 'multiplication') {\n      const correctAnswer = handleMultiply(num1, num2)\n      if (correctAnswer === Number(answer)) {\n        setCorrect(true)\n        setCorrectCount(correctCount + 1)\n      } else {\n        setCorrect(false)\n      }\n    }\n    if (mathFunction === 'division') {\n      const correctAnswer = handleDivide(num1, num2)\n      if (correctAnswer === Number(answer)) {\n        setCorrect(true)\n        setCorrectCount(correctCount + 1)\n      } else {\n        setCorrect(false)\n      }\n    }\n    setAnswer('')\n    setHasPlayed(true)\n  }\n\n  const handleReset = () => {\n    setInputDisabled(false)\n    setAnswer('')\n    setCorrect(null)\n    const num1 = randomNumberGenerator(mode)\n    const num2 = randomNumberGenerator(mode)\n    if (num2 > num1) {\n      const newNum1 = num2;\n      const newNum2 = num1;\n      setNum1(newNum1);\n      setNum2(newNum2);\n    } else {\n      setNum1(num1)\n      setNum2(num2)\n    }\n  }\n\n  console.log('random', num1, num2)\n  console.log('correct??', correct)\n\n  return (\n    <div className='main-container'>\n      {/* {correct ? \n            <div className='modal-overlay' />\n            : null} */}\n      {correct ? <CorrectModal reset={handleReset} /> : null}\n      <h1>Math Game</h1>\n      {hasPlayed ? <div>\n        <h2>You've gotten {correctCount} correct so far!</h2>\n      </div> : null}\n      <div style={{ backgroundColor: 'white', borderRadius: '20px', width: '100%' }}>\n        <div className='settings-box'>\n          <div>\n            <h3>{mode ? mode.toUpperCase() : ''}</h3>\n            <div className='buttons-box'>\n              <div className={`settingBtn ${mode === 'easy' ? 'active' : 'inactive'}`} onClick={() => handleSetMode('easy')}>easy</div>\n              <div className={`settingBtn ${mode === 'medium' ? 'active' : 'inactive'}`} onClick={() => handleSetMode('medium')}>medium</div>\n              {/* <div className={`settingBtn ${mode === 'hard' ? 'active' : 'inactive'}`} onClick={() => handleSetMode('hard')}>hard</div> */}\n              {/* <div className={`settingBtn ${mode === 'expert' ? 'active' : 'inactive'}`} onClick={() => handleSetMode('expert')}>expert</div> */}\n            </div>\n          </div>\n          <div>\n            <h3>{mathFunction ? mathFunction.toUpperCase() : ''}</h3>\n            <div className='buttons-box'>\n              <div className={`settingBtn ${mathFunction === 'addition' ? 'active' : 'inactive'}`} onClick={() => handleSetMathFunction('addition')}>+</div>\n              <div className={`settingBtn ${mathFunction === 'subtraction' ? 'active' : 'inactive'}`} onClick={() => handleSetMathFunction('subtraction')}>-</div>\n              <div className={`settingBtn ${mathFunction === 'multiplication' ? 'active' : 'inactive'}`} onClick={() => handleSetMathFunction('multiplication')}>x</div>\n              <div className={`settingBtn ${mathFunction === 'division' ? 'active' : 'inactive'}`} onClick={() => handleSetMathFunction('division')}>/</div>\n            </div>\n          </div>\n        </div>\n        <div className='mathing-area'>\n          <div className='equation'>\n            <div style={{ margin: 'auto' }}>\n              {num1 !== null ? num1 : '?'}\n              {mathFunction === 'addition' ? ' + ' : mathFunction === 'subtraction' ? ' - ' : mathFunction === 'multiplication' ? ' x ' : mathFunction === 'division' ? ' / ' : ' ? '}\n              {num2 !== null ? num2 : '?'} =\n            </div>\n            <Input answer={answer} handleChangeInput={handleChangeInput} disabled={inputDisabled || !mode || !mathFunction ? true : false} />\n          </div>\n          <div className='mathing-btn-input'>\n            <div style={{ marginLeft: 'auto', marginRight: 'auto' }}\n              className={typeof num1 === 'number' && typeof num2 === 'number' && answer && answer.length ? 'submitBtn' : 'disabled'}\n              onClick={handleCompareAnswer}>Submit</div>\n          </div>\n        </div>\n      </div>\n      {json.version}\n    </div>\n  )\n}\n\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/main/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}